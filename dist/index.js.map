{"version":3,"file":"index.js","sources":["../src/components/NodeBase.ts","../src/components/GraphUX.tsx","../src/index.tsx"],"sourcesContent":["//Tipos de nodo\nexport enum TypeNode {\n  DefaultNode,\n  InputNode,\n  ProcessNode,\n  OutputNode\n}\n\n// Definición B'asica de nodo\nexport interface BaseNode {\n  //Node d3-react properties\n  id: string\n  cx: number\n  cy: number\n  fill: string\n  fontSize: number\n  fontColor: string\n  fontWeight: string\n  dx: number\n  label: string\n  labelPosition: string\n  opacity: number\n  renderLabel: boolean\n  size: number\n  stroke: string\n  strokeWidth: number\n  svg: string\n  type: string\n  viewGenerator: any\n  className: string\n  onClickNode: any\n  onRightClickNode: any\n  onMouseOverNode: any\n  onMouseOutNode: any\n\n  //Patern properties\n  typeNode: TypeNode //tipo de nodo seg'un TypeNode\n  description: string //Descripci'on\n  inputNodes: BaseNode[] //Nodos que tienen relaci'on con el nodo actual\n  value: number //Evaluaci'on del nodo\n  evaluator(): void //m'ertodo que eval'ua \n}\n\nexport class DefaultNode implements BaseNode {\n  //Node d3-react properties Defaults\n  //https://danielcaldas.github.io/react-d3-graph/docs/index.html\n  id: string = ''\n  cx: number = 0\n  cy: number = 0\n  fill: string = 'green'\n  fontSize: number = 8\n  fontColor: string = 'black'\n  fontWeight: string = 'normal'\n  dx: number = 0\n  label: string = ''\n  labelPosition: string = ''\n  opacity: number = 1\n  renderLabel: boolean = true\n  size: number = 200\n  stroke: string = 'none'\n  strokeWidth: number = 1\n  svg: string = 'none'\n  type: string = ''\n  viewGenerator: any = null\n  className: string = 'DefaultNode'\n  onClickNode: any = null\n  onRightClickNode: any = null\n  onMouseOverNode: any = null\n  onMouseOutNode: any = null\n\n  //Patern properties\n  typeNode: TypeNode = TypeNode.DefaultNode\n  description: string = ''\n  inputNodes: BaseNode[] = []\n  value: number = 0\n  evaluator(): void {}  \n}\n\n//Definici'on B'asica de Relaci'on entre nodos\nexport interface BaseLink {\n  //Link d3-react properties\n  d: string\n  source: string\n  target: string\n  markerId: string\n  strokeWidth: number\n  stroke: string\n  strokeDasharray: string\n  strokeDashoffset: string\n  strokeLinecap: string\n  className: string\n  opacity: number\n  mouseCursor: string\n  onClickLink: any\n  onRightClickLink: any\n  onMouseOverLink: any\n  onMouseOutLink: any\n}\n\nexport class DefaultBaseLink implements BaseLink {\n  //Link d3-react properties\n  //https://danielcaldas.github.io/react-d3-graph/docs/index.html\n  d: string = ''\n  source: string = ''\n  target: string = ''\n  markerId: string = ''\n  strokeWidth: number = 1.5\n  stroke: string = 'green'\n  strokeDasharray: string = '5 1'\n  strokeDashoffset: string = '3'\n  strokeLinecap: string = 'round'\n  className: string = 'link'\n  opacity: number = 1\n  mouseCursor: string = 'pointer'\n  onClickLink: any = null\n  onRightClickLink: any = null\n  onMouseOverLink: any = null\n  onMouseOutLink: any = null\n}\n\n//Definici'on de Gr'afico de relaci'on\nexport interface BaseGraph {\n  //compatible con Graph data de react-d3-graph\n  config: Object //{}\n  nodes: BaseNode[]\n  links: BaseLink[]\n  updateNodes(newnodes: BaseNode[]): void\n  updateLinks(newlinks: BaseLink[]): void\n  updateConfig(newconfig: Object): void\n}\n\nexport class VBaseGraph implements BaseGraph {\n  config: Object //{}\n  nodes: BaseNode[]\n  links: BaseLink[]\n  constructor(nodesin: BaseNode[], links: BaseLink[], config: Object) {\n    this.config = config\n    this.nodes = nodesin\n    this.links = links\n  }\n  updateNodes(newnodes: BaseNode[]): void {\n    this.nodes = newnodes\n  }\n  updateLinks(newlinks: BaseLink[]): void {\n    this.links = newlinks\n  }\n  updateConfig(newconfig: Object): void {\n    this.config = newconfig\n  }\n}\n","import { Graph } from 'react-d3-graph'\n\nimport React, { useState } from 'react'\n\nimport {\n  BaseNode,\n  BaseLink,\n  BaseGraph,\n  VBaseGraph,\n  DefaultNode,\n  DefaultBaseLink\n} from './NodeBase'\n;('./NodeBase')\n\nconst data: BaseGraph = new VBaseGraph([], [], {})\n\nconst GraphUX = () => {\n  const [nodes, setNodes] = useState<BaseNode[]>([])\n  const [links, setLinks] = useState<BaseLink[]>([])\n  const [config, setConfig] = useState<Object>([])\n\n  /*\n    // Función para agregar un nuevo nodo \n    const addNode = (newNode: BaseNode) => {\n        setNodes([...nodes, newNode]);\n        data.updateNodes(nodes);\n    };\n\n    const addLink = (newLink:BaseLink)=> {\n        setLinks([...links, newLink]);\n        data.updateLinks(links);\n    };\n\n    const addConfig = (newconfig:Object)=>{\n        setConfig(newconfig);\n        data.updateConfig(config);\n    }*/\n   \n    // Inicializar con nodo vac'io  \n  const snode: BaseNode = new DefaultNode()\n  setNodes([...nodes, snode])\n  const slink: BaseLink = new DefaultBaseLink()\n  setLinks([...links, slink])\n  setConfig([config, {}])\n\n  return <Graph id='graph-id' data={data} config={data.config} />\n}\nexport default GraphUX\n","import * as React from 'react'\nimport GraphUX from './components/GraphUX'\n\nexport const PaternDag = () => {\n  return <GraphUX />\n}\n\n/* ToDo\nProximas Funcionalidades y eventos a a~nadir\n Evento onclick sobre el componente para:\n1- A~nadir/Eliminar/Editar Nodo\n2- A~nadir/Eliminar/Editar Link\n3- A~nadir/Eliminar/Editar Parser de funci'on de evaluaci'on\n*/\n"],"names":["TypeNode","DefaultNode","_proto","prototype","evaluator","DefaultBaseLink","VBaseGraph","nodesin","links","config","nodes","_proto2","updateNodes","newnodes","updateLinks","newlinks","updateConfig","newconfig","data","GraphUX","_useState","useState","setNodes","_useState2","setLinks","_useState3","setConfig","snode","concat","slink","React","Graph","id","PaternDag"],"mappings":"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"}